@page "/game/{gameId:guid}/keys"
@using GameCloud.Dashboard.Models.Responses
@model GameKeysModel


@{
    ViewData["Title"] = "Game Keys";
    Layout = "_GameLayout";

    ViewData["GameId"] = Model.GameId;
}

<div class="container-fluid">
    <!-- Page Title -->
    <div class="row">
        <div class="col-12">
            <div class="page-title-box d-sm-flex align-items-center justify-content-between bg-galaxy-transparent">
                <h4 class="mb-sm-0">Game Keys</h4>
                <div class="page-title-right">
                    <ol class="breadcrumb m-0">
                        <li class="breadcrumb-item">
                            <a href="/games">Games</a>
                        </li>
                        <li class="breadcrumb-item active">Game Keys</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-header align-items-center d-flex">
                    <h4 class="card-title mb-0 flex-grow-1">Manage Game Keys</h4>
                    <div class="flex-shrink-0">
                        <form method="post" asp-page-handler="CreateKey">
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-success">
                                <i class="ri-add-line align-bottom me-1"></i> Generate Game Key
                            </button>
                        </form>
                    </div>
                </div>

                <div class="card-body">
                    @if (Model.Keys == null)
                    {
                        <div class="text-center">
                            <div class="spinner-border text-primary m-1" role="status">
                                <span class="sr-only">Loading...</span>
                            </div>
                        </div>
                    }
                    else if (!Model.Keys.Items.Any())
                    {
                        <div class="text-center py-4">
                            <div class="avatar-lg mx-auto mb-4">
                                <div class="avatar-title bg-primary-subtle text-primary rounded-circle fs-24">
                                    <i class="ri-key-2-line"></i>
                                </div>
                            </div>
                            <h5>No Game Keys Found</h5>
                            <p class="text-muted">Generate your first game key to allow players to access your game.</p>
                            <form method="post" asp-page-handler="CreateKey">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn btn-success">
                                    <i class="ri-add-line align-bottom me-1"></i> Generate Game Key
                                </button>
                            </form>
                        </div>
                    }
                    else
                    {
                        <div class="table-responsive table-card mt-3 mb-1">
                            <table class="table align-middle table-nowrap">
                                <thead class="table-light">
                                <tr>
                                    <th class="sort" data-sort="key">Key</th>
                                    <th class="sort" data-sort="created_date">Created Date</th>
                                    <th class="sort" data-sort="status">Status</th>
                                    <th class="sort" data-sort="action">Action</th>
                                </tr>
                                </thead>
                                <tbody class="list">
                                @foreach (var key in Model.Keys.Items)
                                {
                                    <tr>
                                        <td class="key">
                                            <span class="badge bg-secondary-subtle text-secondary">@key.ApiKey</span>
                                        </td>
                                        <td class="created_date">@key.CreatedAt.ToString("g")</td>
                                        <td class="status">
                                            @if (key.Status == GameKeyStatus.Active)
                                            {
                                                <span class="badge bg-success-subtle text-success">Active</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-warning-subtle text-warning">Revoked</span>
                                            }
                                        </td>
                                        <td>
                                            <div class="d-flex gap-2">
                                                <button class="btn btn-soft-primary btn-sm copy-key" data-key="@key.ApiKey">
                                                    <i class="ri-file-copy-line align-bottom"></i>
                                                </button>
                                                <form method="post" asp-page-handler="DeleteKey" asp-route-key="@key.ApiKey" class="d-inline">
                                                    <button type="submit" class="btn btn-soft-danger btn-sm" onclick="return confirm('Are you sure you want to delete this key?')">
                                                        <i class="ri-delete-bin-5-line align-bottom"></i>
                                                    </button>
                                                </form>
                                            </div>
                                        </td>
                                    </tr>
                                }
                                </tbody>
                            </table>
                        </div>

                        @if (Model.Keys.Pages > 1)
                        {
                            <div class="d-flex justify-content-end mt-3">
                                <div class="pagination-wrap hstack gap-2">
                                    @if (Model.Keys.HasPreviousPage)
                                    {
                                        <a class="page-item pagination-prev"
                                           asp-route-pageNumber="@(Model.Keys.Index - 1)">
                                            Previous
                                        </a>
                                    }
                                    else
                                    {
                                        <a class="page-item pagination-prev disabled">Previous</a>
                                    }

                                    @if (Model.Keys.HasNextPage)
                                    {
                                        <a class="page-item pagination-next"
                                           asp-route-pageNumber="@(Model.Keys.Index + 1)">
                                            Next
                                        </a>
                                    }
                                    else
                                    {
                                        <a class="page-item pagination-next disabled">Next</a>
                                    }
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>


<!-- Create Key Modal -->
<div class="modal fade" id="createKeyModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header border-bottom-dashed">
                <h5 class="modal-title">Create Key</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body py-4">
                <div class="text-center">
                    <div class="avatar-lg mx-auto mb-3">
                        <div class="avatar-title bg-danger-subtle text-danger rounded-circle fs-24">
                            <i class="ri-delete-bin-line"></i>
                        </div>
                    </div>
                    <h5>Some text</h5>
                    <p class="text-muted mb-0">some text</p>
                </div>
            </div>
            <div class="modal-footer border-top-dashed">
                <form method="post" asp-page-handler="CreateKey">
                    <input type="hidden" id="deleteGameId" name="id"/>
                    <button type="button" class="btn btn-light" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">
                        <i class="ri-delete-bin-line align-bottom me-1"></i> CreateKey
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.querySelectorAll('.copy-key').forEach(button => {
            button.addEventListener('click', async () => {
                const key = button.getAttribute('data-key');
                try {
                    await navigator.clipboard.writeText(key);
                    // Add toast notification here
                    alert('Key copied to clipboard!');
                } catch (err) {
                    console.error('Failed to copy key:', err);
                    alert('Failed to copy key to clipboard');
                }
            });
        });
    
    </script>
}